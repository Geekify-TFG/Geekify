[{"/Users/jordiromero/Documents/Universidad/TFG/Geekify/src/index.js":"1","/Users/jordiromero/Documents/Universidad/TFG/Geekify/src/App.js":"2","/Users/jordiromero/Documents/Universidad/TFG/Geekify/src/reportWebVitals.js":"3","/Users/jordiromero/Documents/Universidad/TFG/Geekify/src/resources/AppTexts.js":"4","/Users/jordiromero/Documents/Universidad/TFG/Geekify/src/components/Navbar/Navbar.js":"5","/Users/jordiromero/Documents/Universidad/TFG/Geekify/src/resources/AppColors.js":"6","/Users/jordiromero/Documents/Universidad/TFG/Geekify/src/locale/en.js":"7","/Users/jordiromero/Documents/Universidad/TFG/Geekify/src/pages/MainPage.js":"8","/Users/jordiromero/Documents/Universidad/TFG/Geekify/src/resources/ApiUrls.js":"9","/Users/jordiromero/Documents/Universidad/TFG/Geekify/src/components/GridGames/GridGames.js":"10","/Users/jordiromero/Documents/Universidad/TFG/Geekify/src/components/GameCard/index.js":"11","/Users/jordiromero/Documents/Universidad/TFG/Geekify/src/components/GameCard/GameCard.js":"12","/Users/jordiromero/Documents/Universidad/TFG/Geekify/src/resources/Icons.js":"13","/Users/jordiromero/Documents/Universidad/TFG/Geekify/src/components/IconProvider/IconProvider.js":"14","/Users/jordiromero/Documents/Universidad/TFG/Geekify/src/pages/GamePage.js":"15","/Users/jordiromero/Documents/Universidad/TFG/Geekify/src/components/CardGeekify/CardGeekify.js":"16","/Users/jordiromero/Documents/Universidad/TFG/Geekify/src/components/TextGeekify/TextGeekify.js":"17","/Users/jordiromero/Documents/Universidad/TFG/Geekify/src/components/SearchBar/SearchBar.js":"18"},{"size":500,"mtime":1645265084165,"results":"19","hashOfConfig":"20"},{"size":6394,"mtime":1645870116533,"results":"21","hashOfConfig":"20"},{"size":362,"mtime":1645265084165,"results":"22","hashOfConfig":"20"},{"size":3214,"mtime":1645871453991,"results":"23","hashOfConfig":"20"},{"size":5712,"mtime":1645730417805,"results":"24","hashOfConfig":"20"},{"size":219,"mtime":1645868356053,"results":"25","hashOfConfig":"20"},{"size":186,"mtime":1645867785769,"results":"26","hashOfConfig":"20"},{"size":2211,"mtime":1645872387328,"results":"27","hashOfConfig":"20"},{"size":462,"mtime":1645730031994,"results":"28","hashOfConfig":"20"},{"size":4002,"mtime":1645866264724,"results":"29","hashOfConfig":"20"},{"size":36,"mtime":1645720682350,"results":"30","hashOfConfig":"20"},{"size":6631,"mtime":1645874948613,"results":"31","hashOfConfig":"20"},{"size":849,"mtime":1645869049407,"results":"32","hashOfConfig":"20"},{"size":721,"mtime":1645730064700,"results":"33","hashOfConfig":"20"},{"size":1837,"mtime":1645866839177,"results":"34","hashOfConfig":"20"},{"size":1212,"mtime":1645730199535,"results":"35","hashOfConfig":"20"},{"size":2960,"mtime":1645871420790,"results":"36","hashOfConfig":"20"},{"size":2741,"mtime":1645869645522,"results":"37","hashOfConfig":"20"},{"filePath":"38","messages":"39","suppressedMessages":"40","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"41"},"iszs3t",{"filePath":"42","messages":"43","suppressedMessages":"44","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"45","usedDeprecatedRules":"41"},{"filePath":"46","messages":"47","suppressedMessages":"48","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"41"},{"filePath":"49","messages":"50","suppressedMessages":"51","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"53","messages":"54","suppressedMessages":"55","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"56","usedDeprecatedRules":"57"},{"filePath":"58","messages":"59","suppressedMessages":"60","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"41"},{"filePath":"61","messages":"62","suppressedMessages":"63","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"41"},{"filePath":"64","messages":"65","suppressedMessages":"66","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"67","messages":"68","suppressedMessages":"69","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"70","usedDeprecatedRules":"41"},{"filePath":"71","messages":"72","suppressedMessages":"73","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"74","usedDeprecatedRules":"41"},{"filePath":"75","messages":"76","suppressedMessages":"77","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"41"},{"filePath":"78","messages":"79","suppressedMessages":"80","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"81"},{"filePath":"82","messages":"83","suppressedMessages":"84","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"85","messages":"86","suppressedMessages":"87","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"88","messages":"89","suppressedMessages":"90","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"91","usedDeprecatedRules":"41"},{"filePath":"92","messages":"93","suppressedMessages":"94","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"41"},{"filePath":"95","messages":"96","suppressedMessages":"97","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"98","messages":"99","suppressedMessages":"100","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"41"},"/Users/jordiromero/Documents/Universidad/TFG/Geekify/src/index.js",[],[],["101","102"],"/Users/jordiromero/Documents/Universidad/TFG/Geekify/src/App.js",["103","104","105","106","107"],[],"import './App.css';\nimport {useState} from \"react\";\nimport {makeStyles} from \"@material-ui/core/styles\";\nimport {useTextStyles} from \"./resources/AppTexts\";\nimport clsx from \"clsx\";\nimport {Drawer, Icon, List, ListItem, ListItemIcon, ListItemText} from \"@material-ui/core\";\nimport {LabelsDrawer} from \"./locale/en\";\nimport {AppColors} from \"./resources/AppColors\";\nimport {BrowserRouter as Router, Link, Route, Switch,} from \"react-router-dom\";\nimport MainPage from \"./pages/MainPage\"\nimport GamePage from \"./pages/GamePage\";\nimport homeIcon from \"./img/home_icon.svg\"\nimport searchIcon from \"./img/search_icon.svg\"\nimport calendarIcon from \"./img/calendar_icon.svg\"\nimport libraryIcon from \"./img/library_icon.svg\"\nimport forumsIcon from \"./img/forum_icon.svg\"\n\n\nconst drawerWidth = 240;\nconst useStyles = makeStyles((theme) => ({\n    content: {\n        backgroundColor: AppColors.BACKGROUND,\n        transition: theme.transitions.create(\"margin\", {\n            easing: theme.transitions.easing.sharp,\n            duration: theme.transitions.duration.leavingScreen,\n        }),\n        marginRight: 0,\n        flexGrow: 1,\n        minHeight: '100vh !important'\n\n    },\n    contentShift: {\n        transition: theme.transitions.create(\"margin\", {\n            easing: theme.transitions.easing.easeOut,\n            duration: theme.transitions.duration.enteringScreen,\n        }),\n        marginLeft: drawerWidth,\n    },\n    drawerHeader: {\n        display: \"flex\",\n        alignItems: \"center\",\n        padding: theme.spacing(0, 1),\n        // necessary for content to be below app bar\n        ...theme.mixins.toolbar,\n        justifyContent: \"flex-end\",\n    },\n    drawer: {\n        width: drawerWidth,\n        flexShrink: 0,\n        whiteSpace: \"nowrap\",\n    },\n    drawerPaper: {\n        width: drawerWidth,\n    },\n    iconRoot: {\n        textAlign: \"center\",\n    },\n    imageIcon: {\n        height: \"100%\",\n    },\n\n    hide: {\n        display: \"none\",\n    },\n    drawerOpen: {\n        backgroundColor: AppColors.BACKGROUND_DRAWER,\n        width: drawerWidth,\n        transition: theme.transitions.create(\"width\", {\n            easing: theme.transitions.easing.sharp,\n            duration: theme.transitions.duration.enteringScreen,\n        }),\n    },\n\n    appBar: {\n        transition: theme.transitions.create(['margin', 'width'], {\n            easing: theme.transitions.easing.sharp,\n            duration: theme.transitions.duration.leavingScreen,\n        }),\n    },\n}));\n\nconst RouteMain = ({component: Component, select}) => {\n    //const authContext = useContext(AuthContext);\n    // const {authenticated, checkAuth} = authContext;\n    const texts = useTextStyles();\n\n\n    const classes = useStyles();\n    const [open, setOpen] = useState(true); //false\n    const [selected, setSelected] = useState(0);\n\n\n    const drawerIconsList = [homeIcon, searchIcon, calendarIcon, libraryIcon, forumsIcon];\n    const drawerLinkList = [\"/\", \"/search\", \"/calendar\", \"/library\", \"/forums\"];\n\n    return (\n        <>\n\n            <main\n                className={clsx(classes.content, {\n                    [classes.contentShift]: open,\n                })}\n            >\n                {/*<div className={classes.drawerHeader}/>*/}\n                <Route\n                    render={(props) =>\n                        <Component {...props} />\n                    }\n                />\n\n            </main>\n            <Drawer\n                anchor=\"left\"\n                variant=\"permanent\"\n                className={clsx(classes.drawer, {\n                    [classes.drawerOpen]: open,\n                })}\n                classes={{\n                    paper: clsx({\n                        [classes.drawerOpen]: open,\n                    }),\n                }}\n            >\n                <div className={classes.drawerHeader}>\n\n                </div>\n\n                <List>\n                    {[\n                        LabelsDrawer.HOME,\n                        LabelsDrawer.SEARCH,\n                        LabelsDrawer.CALENDAR,\n                        LabelsDrawer.LIBRARY,\n                        LabelsDrawer.FORUMS,\n                    ].map((text, index) => (\n                        <Link\n                            to={drawerLinkList[index]}\n                            onClick={() => {\n                                setSelected(index);\n                            }}\n                            style={{color: AppColors.WHITE, textDecoration: \"none\"}}\n                        >\n                            <ListItem\n                                button\n                                key={text}\n                                selected={selected === index}\n                                style={{\n                                    backgroundColor:\n                                        selected === index && AppColors.PRIMARY,\n                                    borderLeft:\n                                        selected === index && \"5px solid \" + AppColors.PRIMARY,\n                                    paddingLeft: selected === index && \"22px\" || selected !== index && \"27px\",\n                                }}\n                            >\n                                <ListItemIcon>\n                                    <Icon classes={classes.iconRoot}>\n                                        <img\n                                            alt=\"icon\"\n                                            className={classes.imageIcon}\n                                            src={drawerIconsList[index]}\n                                        />\n                                    </Icon>\n                                </ListItemIcon>\n                                <ListItemText\n                                    classes={{primary: texts.subtitle_bold}}\n                                    primary={text}\n                                    style={{color: AppColors.WHITE}}\n                                />\n                            </ListItem>\n                        </Link>\n                    ))}\n                </List>\n            </Drawer>\n\n        </>\n    );\n};\n\nfunction App() {\n    return (\n        <Router>\n            <Switch>\n                <RouteMain exact path=\"/\" component={MainPage}/>\n                <RouteMain exact path={\"/a\"} component={() => <GamePage/>}/>\n            </Switch>\n        </Router>\n\n    );\n}\n\nexport default App;\n","/Users/jordiromero/Documents/Universidad/TFG/Geekify/src/reportWebVitals.js",[],[],"/Users/jordiromero/Documents/Universidad/TFG/Geekify/src/resources/AppTexts.js",[],[],["108","109"],"/Users/jordiromero/Documents/Universidad/TFG/Geekify/src/components/Navbar/Navbar.js",["110","111","112","113","114"],[],"import React, { useState} from 'react';\nimport clsx from 'clsx'\nimport {AppBar, Grid, IconButton, Toolbar} from '@material-ui/core'\n\nimport {makeStyles} from '@material-ui/core/styles'\nimport {AppColors} from \"../../resources/AppColors\"\nimport {Link, useHistory} from 'react-router-dom'\nimport PropTypes from 'prop-types';\nimport ExitToAppIcon from '@material-ui/icons/ExitToApp';\nimport AccountCircleOutlinedIcon from '@material-ui/icons/AccountCircleOutlined';\n\n\n\nconst drawerWidth = 240;\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        display: 'flex',\n    },\n    appBar: {\n        transition: theme.transitions.create(['margin', 'width'], {\n            easing: theme.transitions.easing.sharp,\n            duration: theme.transitions.duration.leavingScreen,\n        }),\n    },\n    appBarShift: {\n        width: `calc(100% - ${drawerWidth}px)`,\n        marginLeft: drawerWidth,\n        transition: theme.transitions.create(['margin', 'width'], {\n            easing: theme.transitions.easing.easeOut,\n            duration: theme.transitions.duration.enteringScreen,\n        }),\n    },\n    menuButton: {\n        marginRight: theme.spacing(2),\n    },\n    hide: {\n        display: 'none',\n    },\n    drawer: {\n        width: drawerWidth,\n        flexShrink: 0,\n    },\n    drawerPaper: {\n        width: drawerWidth,\n    },\n    drawerHeader: {\n        display: 'flex',\n        alignItems: 'center',\n        padding: theme.spacing(0, 1),\n        // necessary for content to be below app bar\n        ...theme.mixins.toolbar,\n        justifyContent: 'flex-end',\n    },\n    content: {\n        flexGrow: 1,\n        padding: theme.spacing(3),\n        transition: theme.transitions.create('margin', {\n            easing: theme.transitions.easing.sharp,\n            duration: theme.transitions.duration.leavingScreen,\n        }),\n        marginLeft: -drawerWidth,\n    },\n    contentShift: {\n        transition: theme.transitions.create('margin', {\n            easing: theme.transitions.easing.easeOut,\n            duration: theme.transitions.duration.enteringScreen,\n        }),\n        marginLeft: 0,\n    },\n    title: {\n        flexGrow: 1,\n        textAlign: 'center'\n    },\n    imageIcon: {\n        height: '100%',\n    },\n    icon: {\n        height: '60px',\n    },\n    iconRoot: {\n        textAlign: 'center'\n    },\n}));\n\n/**\n * @component\n * Component to create the superior navbar\n * @param {boolean} open : value to know when the navbar is open\n * @param {boolean} setOpen: value to open or close the navbar\n * @param {function} setSelected: function to know which value of the drawer is selected\n * @param {boolean} logged: value to know if the user is logged or not\n *\n * @constructor\n * <Navbar open={false} setOpen={false} setSelected={null} logged={false}/>\n */\nconst Navbar = ({open, setOpen, setSelected, logged}) => {\n    //const authContext = useContext(AuthContext)\n    //const {logout,signOut} = authContext;\n    const classes = useStyles();\n    const history = useHistory()\n    const [alertOpen, setAlertOpen] = React.useState(false);\n    const [showExitModal, setShowExitModal] = useState(false);\n\n    const handleDrawerOpen = () => {\n        setOpen(true);\n    };\n    const handleSetSelected = () => {\n        setSelected(null)\n    }\n\n\n    const handleClickOpen = () => {\n        setShowExitModal(true);\n    };\n\n    const handleOnConfirmExit = ()=> {\n        // TODO: Duplicate form\n        sessionStorage.removeItem('user')\n       // logout()\n        setShowExitModal(!showExitModal)\n    }\n\n\n    return (\n        <AppBar\n            style={{color: AppColors.WHITE, background: AppColors.PRIMARY}}\n            position=\"fixed\"\n            className={clsx(classes.appBar, {\n                [classes.appBarShift]: open,\n            })}\n        >\n            <Toolbar>\n                {logged &&\n                < IconButton\n                    color=\"inherit\"\n                    aria-label=\"open drawer\"\n                    edge=\"end\"\n                    onClick={handleDrawerOpen}\n                    className={clsx(open && classes.hide)}\n                >\n\n                </IconButton>\n                }\n\n                {logged &&\n                <IconButton onClick={() => {\n                    history.push('/account');\n                    handleSetSelected()\n                }} color='inherit'>\n                    <AccountCircleOutlinedIcon/>\n                </IconButton>\n                }\n                {logged &&\n                <IconButton onClick={() => handleClickOpen()} color='inherit'>\n                    <ExitToAppIcon/>\n                </IconButton>\n                }\n                {/*\n                    {showExitModal && (\n\n                        <DialogUhda textCancelButton={LabelsLogOut.CANCEL}\n                                    body={\n                                        <Grid>\n                                            <TextUhda color={AppColors.PRIMARY} type={textType.BODY}\n                                                      text={LabelsLogOut.TEXT}/>\n\n\n                                        </Grid>}\n                                    buttonColor={AppColors.RED}\n                                    title={LabelsLogOut.LOG_OUT}\n                                    show={showExitModal}\n                                    handleShow={setShowExitModal}\n                                    handleConfirm={handleOnConfirmExit}\n                                    textConfirmButton={LabelsLogOut.SURE}/>\n                    )}\n                */}\n\n            </Toolbar>\n        </AppBar>\n    )\n}\n\nNavbar.propTypes = {\n    open: PropTypes.bool,\n    setOpen: PropTypes.bool,\n    setSelected: PropTypes.func.isRequired\n}\n\nexport default Navbar;\n",["115","116"],"/Users/jordiromero/Documents/Universidad/TFG/Geekify/src/resources/AppColors.js",[],[],"/Users/jordiromero/Documents/Universidad/TFG/Geekify/src/locale/en.js",[],[],"/Users/jordiromero/Documents/Universidad/TFG/Geekify/src/pages/MainPage.js",["117","118","119","120","121","122"],[],"/Users/jordiromero/Documents/Universidad/TFG/Geekify/src/resources/ApiUrls.js",["123","124","125"],[],"// Base\nconst _DOMAIN = \"https://api.rawg.io/api\"; // Domain of the server\n\nconst _API_KEY = \"?key=40f3cb2ff2c94a5889d3d6c865415ec5\\n\"; // Path to the API\nexport const BASE_PATH = `${_DOMAIN}`; // Base URL of the backend\n\n// Paths auths\nconst _LOGIN_PATH = \"/auth/login\";\nconst _RESET_STEP1 = \"/auth/reset-step1\";\nconst _RESET_STEP2 = \"/auth/reset-step2\";\n\n// Path games\nconst _GAMES_PATH = \"/games\";\n// Endpoints\nexport const GAMES = `${_GAMES_PATH}${_API_KEY}`","/Users/jordiromero/Documents/Universidad/TFG/Geekify/src/components/GridGames/GridGames.js",["126","127","128","129","130"],[],"import React, {useEffect, useState} from 'react';\nimport {Button, Container, Grid} from '@material-ui/core';\nimport {useHistory} from \"react-router-dom\";\nimport {makeStyles} from '@material-ui/core/styles'\nimport {useTextStyles} from \"../../resources/AppTexts\";\nimport {BASE_PATH, GAMES} from \"../../resources/ApiUrls\";\nimport axios from \"axios\";\nimport GameCard from \"../GameCard\";\n\n/**\n * @component\n * Component to show all the games\n *\n * @param {object} games: JSON with all the data available of the game\n *\n * @example\n * const games = {your JSON games data}\n * <GridGames games={games}/>\n */\n\nconst useStyles = makeStyles(theme => ({\n    root: {\n        flexGrow: 1,\n        padding: theme.spacing(2)\n    }\n}))\n\nconst GridGames = ({games}) => {\n    const history = useHistory()\n    const texts = useTextStyles();\n    const classes = useStyles();\n    const [redirectTo, setRedirectTo] = useState([false, -1]);\n\n\n    const [game, setGame] = useState(games);\n\n    //Function to get all the games\n    const getGames = async () => {\n        try {\n            var data = []\n            const response = await axios.get(`${BASE_PATH}${GAMES}`);\n            console.log(response.data.results)\n            setGame(response.data.results)\n        } catch (err) {\n            console.log(err.message)\n        }\n    }\n    useEffect(() => {\n        getGames()\n    }, []);\n\n\n    if (redirectTo[0]) {\n        return (\n            <Container fluid style={{margin: 0, maxWidth: '100%'}}>\n                <div className={classes.root}>\n\n                    <Grid container item\n                          style={{ marginBottom: '24px' }}\n                          direction={\"row\"}\n                          alignItems={\"flex-end\"}\n                          justifyContent={\"flex-end\"}>\n\n                    </Grid>\n\n                    <Grid\n                        align=\"center\"\n                        container\n                        spacing={2}\n                        direction=\"row\"\n                        alignItems={\"center\"}\n                        justify=\"flex-start\">\n\n                        {\n                            game.map(elem => (\n                                <Grid item key={game.indexOf(elem)}\n                                      xs={12}\n                                      sm={12}\n                                      md={6}\n                                      lg={4}\n                                      xl={3}\n                                >\n                                    <GameCard\n                                      //  gameId={elem.id}\n                                        gameTitle={elem.name}\n                                    />\n                                </Grid>\n                            ))}\n\n\n                    </Grid>\n                </div>\n            </Container>\n\n        )\n    }\n\n    return (\n        <Container fluid style={{margin: 0, maxWidth: '100%'}}>\n            <div className={classes.root}>\n\n                <Grid\n                    align=\"center\"\n                    container\n                    spacing={2}\n                    direction=\"row\"\n                    alignItems={\"center\"}\n                    justify=\"flex-start\">\n\n                    {\n                        game.map(elem => (\n                            <Grid item key={game.indexOf(elem)}\n                                  xs={12}\n                                  sm={12}\n                                  md={6}\n                                  lg={4}\n                                  xl={3}\n                            >\n                                <GameCard\n                                 //   gameId={elem.id}\n                                    gameTitle={elem.name}\n                                    gameImage={elem.background_image}\n                                />\n                            </Grid>\n                        ))}\n\n\n                </Grid>\n            </div>\n        </Container>\n\n    )\n}\n\nexport default GridGames;\n","/Users/jordiromero/Documents/Universidad/TFG/Geekify/src/components/GameCard/index.js",[],[],"/Users/jordiromero/Documents/Universidad/TFG/Geekify/src/components/GameCard/GameCard.js",["131","132","133","134"],[],"import React, {useState} from 'react';\nimport {AppColors} from \"../../resources/AppColors\";\nimport {useHistory} from \"react-router-dom\";\nimport {AppTextsFontSize, AppTextsFontWeight, textType, useTextStyles} from \"../../resources/AppTexts\";\nimport {makeStyles} from \"@mui/styles\";\nimport {\n    Button,\n    CardActions,\n    CardContent,\n    CardHeader,\n    CardMedia,\n    Fade,\n    Grid,\n    Link,\n    Menu,\n    MenuItem\n} from '@material-ui/core';\nimport Card from \"../CardGeekify/CardGeekify\";\nimport TextGeekify from \"../TextGeekify/TextGeekify\";\n\nconst useStyles = makeStyles({\n    root: {\n        minWidth: 275,\n    },\n    bullet: {\n        display: 'inline-block',\n        margin: '0 2px',\n        transform: 'scale(0.8)',\n    },\n    text: {\n        fontSize: AppTextsFontSize.SIZE_BODY,\n        fontWeight: AppTextsFontWeight.WEIGHT_LIGHT\n    },\n    pos: {\n        marginBottom: 12,\n    },\n    link: {\n        overflowX: \"auto\",\n        \"&:hover\": {\n            cursor: 'pointer',\n            textDecoration: `underline ${AppColors.WHITE}`\n        }\n    }, cardHeaderRoot: {\n        overflow: \"hidden\"\n    },\n    cardHeaderContent: {\n        overflow: \"hidden\"\n    }\n\n\n});\n\n/**\n * @component\n * Component to create the card of the game\n *\n * @param {number} gameId: id of the game\n * @param {string} gameTitle: title of the game\n * @param {string} gameDescription: description of the game\n\n *\n * @constructor\n * <GameCard gameId={'12'} gameTitle={'TITLE'} gameDescription={'DESCRIPTION'} gameImage={2}/>\n *\n */\nconst GameCard = ({\n                      gameId,\n                      gameTitle,\n                      gameDescription,\n                      gameImage\n\n                  }) => {\n    const classes = useStyles();\n    const [anchorEl, setAnchorEl] = React.useState(null);\n    const open = Boolean(anchorEl);\n    const texts = useTextStyles();\n    const history = useHistory()\n    const [drawerLink, setDrawerLink] = useState()\n    const handleClick = (event) => {\n        setAnchorEl(event.currentTarget);\n    };\n\n\n    const onClickHandler = () => {\n        history.push({\n            pathname: `/game/${gameId}`,\n            state: {detail: gameId,}\n        })\n\n\n    }\n\n\n    const handleClose = () => {\n        setAnchorEl(null);\n    };\n\n    const body = (\n            <Grid\n                container\n                item\n                xs\n                direction=\"column\"\n                justifyContent=\"space-between\"\n            >\n                <Grid container wrap=\"nowrap\" spacing={2}>\n                    <Grid item xs zeroMinWidth>\n                        <Link className={classes.link}>\n                            <CardHeader\n                                classes={{\n                                    title: texts.title_bold,\n                                    root: classes.cardHeaderRoot,\n                                    content: classes.cardHeaderContent\n                                }}\n                                style={{\n                                    height: '64px',\n                                    width: '232px',\n                                    color: AppColors.PRIMARY,\n                                    paddingLeft: \"24px\",\n                                    paddingTop: \"24px\",\n                                    paddingBottom: \"8px\"\n                                }}\n                                onClick={onClickHandler}\n                                title={\n                                    <TextGeekify margin={\"0px\"} style={\"break-word\"} type={textType.TITLE_BOLD}\n                                          text={gameTitle}/>}\n                            />\n\n                        </Link>\n                    </Grid>\n                </Grid>\n\n                <CardMedia\n                    component=\"img\"\n                    height=\"194\"\n                    image={gameImage}\n                    alt=\"Paella dish\"\n                />\n                <Grid container wrap=\"nowrap\" spacing={2}>\n                    <Grid item xs zeroMinWidth>\n                        <CardContent style={{\n                            height: '110px', width: '280px',\n                            paddingTop: '6px', paddingBottom: 0, paddingLeft: '24px',\n                        }}>\n                            <TextGeekify margin={\"0px\"} style={\"break-word\"} type={textType.BODY_CARD}\n                                  text={gameDescription}/>\n\n                        </CardContent>\n                    </Grid>\n                </Grid>\n                <CardActions>\n                    <Grid\n                        item\n                        zeroMinWidth\n                        xs\n                        direction=\"column\"\n                        justifyContent=\"flex-start\"\n                        alignItems=\"center\">\n                        <Grid\n                            style={{padding: \"10px\", paddingTop: 0}}\n                            container\n                            item\n                            direction=\"row\"\n                            justifyContent=\"flex-start\"\n                            alignItems=\"center\">\n\n                            <Grid\n                                item>\n                                <Button aria-controls=\"fade-menu\" aria-haspopup=\"true\" onClick={handleClick}>\n\n                                </Button>\n                                <Menu\n                                    style={{\n                                        boxShadow: \"3px 3px 3px 1px rgba(0,0,0,.16)\"\n                                    }}\n                                    color={AppColors.WHITE}\n                                    id=\"fade-menu\"\n                                    anchorEl={anchorEl}\n                                    anchorOrigin={{vertical: \"bottom\", horizontal: \"right\"}}\n                                    keepMounted\n                                    open={open}\n                                    onClose={handleClose}\n                                    TransitionComponent={Fade}>\n                                    <MenuItem style={{color: AppColors.PRIMARY}}\n                                              onClick={() => {\n                                                  handleClose()\n                                              }}> {\"EDIT\"} </MenuItem>\n\n                                </Menu>\n                            </Grid>\n                        </Grid>\n                    </Grid>\n                </CardActions>\n            </Grid>\n        )\n    ;\n\n    return <Card height={'280px'} width={'320px'}> {body} </Card>\n\n\n}\n\nGameCard.propTypes = {}\n\nexport default GameCard;\n","/Users/jordiromero/Documents/Universidad/TFG/Geekify/src/resources/Icons.js",[],[],"/Users/jordiromero/Documents/Universidad/TFG/Geekify/src/components/IconProvider/IconProvider.js",[],[],"/Users/jordiromero/Documents/Universidad/TFG/Geekify/src/pages/GamePage.js",["135","136","137","138"],[],"import React, {useEffect, useState} from 'react';\nimport {Grid, Paper} from \"@material-ui/core\";\nimport {Button, Container, styled, Typography} from \"@mui/material\";\nimport logo from \"../logo.svg\";\nimport {BASE_PATH, GAMES} from \"../resources/ApiUrls\";\nimport axios from \"axios\";\nimport GridGames from \"../components/GridGames/GridGames\";\nimport {useHistory} from \"react-router-dom\";\n\nconst Item = styled(Paper)(({theme}) => ({\n    backgroundColor: theme.palette.mode === 'dark' ? '#1A2027' : '#fff',\n    ...theme.typography.body2,\n    padding: theme.spacing(1),\n    textAlign: 'center',\n    color: theme.palette.text.secondary,\n}));\n\n\nconst GamePage = () => {\n    const [games, setGames] = useState();\n    const history = useHistory()\n\n    const getGames = async () => {\n        try {\n            var data = []\n            const response = await axios.get(`${BASE_PATH}${GAMES}`);\n            console.log(response.data.results)\n            setGames(response.data.results)\n        } catch (err) {\n            console.log(err.message)\n        }\n    }\n    useEffect(() => {\n        getGames()\n    }, []);\n\n    return (\n        <Grid container>\n            <Button onClick={()=>history.push({pathname:\"/\"})}>A</Button>\n\n            <Container maxWidth=\"sm\" className=\"App\">\n            <Paper>\n                <img src={logo} className=\"App-logo\" alt=\"logo\" />\n                <Typography variant=\"h4\" component=\"h1\" gutterBottom>\n                    Geekify project v5\n                </Typography>\n                <Button variant=\"contained\" color=\"primary\">\n                    Primary Button\n                </Button>\n                <Button variant=\"contained\" color=\"secondary\">\n                    Secondary Button\n                </Button>\n            </Paper>\n        </Container>\n        </Grid>\n    )\n}\n\nexport default GamePage;\n","/Users/jordiromero/Documents/Universidad/TFG/Geekify/src/components/CardGeekify/CardGeekify.js",[],[],"/Users/jordiromero/Documents/Universidad/TFG/Geekify/src/components/TextGeekify/TextGeekify.js",["139"],[],"/Users/jordiromero/Documents/Universidad/TFG/Geekify/src/components/SearchBar/SearchBar.js",[],[],{"ruleId":"140","replacedBy":"141"},{"ruleId":"142","replacedBy":"143"},{"ruleId":"144","severity":1,"message":"145","line":89,"column":18,"nodeType":"146","messageId":"147","endLine":89,"endColumn":25},{"ruleId":"148","severity":1,"message":"149","line":152,"column":69,"nodeType":"150","messageId":"151","endLine":152,"endColumn":71},{"ruleId":"148","severity":1,"message":"149","line":152,"column":79,"nodeType":"150","messageId":"151","endLine":152,"endColumn":81},{"ruleId":"148","severity":1,"message":"152","line":152,"column":79,"nodeType":"150","messageId":"151","endLine":152,"endColumn":81},{"ruleId":"148","severity":1,"message":"152","line":152,"column":101,"nodeType":"150","messageId":"151","endLine":152,"endColumn":103},{"ruleId":"140","replacedBy":"153"},{"ruleId":"142","replacedBy":"154"},{"ruleId":"144","severity":1,"message":"155","line":3,"column":17,"nodeType":"146","messageId":"147","endLine":3,"endColumn":21},{"ruleId":"144","severity":1,"message":"156","line":7,"column":9,"nodeType":"146","messageId":"147","endLine":7,"endColumn":13},{"ruleId":"144","severity":1,"message":"157","line":101,"column":12,"nodeType":"146","messageId":"147","endLine":101,"endColumn":21},{"ruleId":"144","severity":1,"message":"158","line":101,"column":23,"nodeType":"146","messageId":"147","endLine":101,"endColumn":35},{"ruleId":"144","severity":1,"message":"159","line":116,"column":11,"nodeType":"146","messageId":"147","endLine":116,"endColumn":30},{"ruleId":"140","replacedBy":"160"},{"ruleId":"142","replacedBy":"161"},{"ruleId":"144","severity":1,"message":"162","line":2,"column":15,"nodeType":"146","messageId":"147","endLine":2,"endColumn":20},{"ruleId":"144","severity":1,"message":"163","line":3,"column":9,"nodeType":"146","messageId":"147","endLine":3,"endColumn":15},{"ruleId":"144","severity":1,"message":"164","line":9,"column":8,"nodeType":"146","messageId":"147","endLine":9,"endColumn":19},{"ruleId":"144","severity":1,"message":"165","line":10,"column":9,"nodeType":"146","messageId":"147","endLine":10,"endColumn":17},{"ruleId":"144","severity":1,"message":"166","line":23,"column":11,"nodeType":"146","messageId":"147","endLine":23,"endColumn":18},{"ruleId":"144","severity":1,"message":"167","line":29,"column":17,"nodeType":"146","messageId":"147","endLine":29,"endColumn":21},{"ruleId":"144","severity":1,"message":"168","line":8,"column":7,"nodeType":"146","messageId":"147","endLine":8,"endColumn":18},{"ruleId":"144","severity":1,"message":"169","line":9,"column":7,"nodeType":"146","messageId":"147","endLine":9,"endColumn":19},{"ruleId":"144","severity":1,"message":"170","line":10,"column":7,"nodeType":"146","messageId":"147","endLine":10,"endColumn":19},{"ruleId":"144","severity":1,"message":"171","line":2,"column":9,"nodeType":"146","messageId":"147","endLine":2,"endColumn":15},{"ruleId":"144","severity":1,"message":"166","line":29,"column":11,"nodeType":"146","messageId":"147","endLine":29,"endColumn":18},{"ruleId":"144","severity":1,"message":"172","line":30,"column":11,"nodeType":"146","messageId":"147","endLine":30,"endColumn":16},{"ruleId":"144","severity":1,"message":"173","line":32,"column":24,"nodeType":"146","messageId":"147","endLine":32,"endColumn":37},{"ruleId":"144","severity":1,"message":"167","line":40,"column":17,"nodeType":"146","messageId":"147","endLine":40,"endColumn":21},{"ruleId":"144","severity":1,"message":"174","line":78,"column":12,"nodeType":"146","messageId":"147","endLine":78,"endColumn":22},{"ruleId":"144","severity":1,"message":"175","line":78,"column":24,"nodeType":"146","messageId":"147","endLine":78,"endColumn":37},{"ruleId":"176","severity":1,"message":"177","line":125,"column":65,"nodeType":"178","messageId":"179","endLine":125,"endColumn":85},{"ruleId":"176","severity":1,"message":"177","line":145,"column":57,"nodeType":"178","messageId":"179","endLine":145,"endColumn":77},{"ruleId":"144","severity":1,"message":"180","line":7,"column":8,"nodeType":"146","messageId":"147","endLine":7,"endColumn":17},{"ruleId":"144","severity":1,"message":"181","line":10,"column":7,"nodeType":"146","messageId":"147","endLine":10,"endColumn":11},{"ruleId":"144","severity":1,"message":"182","line":20,"column":12,"nodeType":"146","messageId":"147","endLine":20,"endColumn":17},{"ruleId":"144","severity":1,"message":"167","line":25,"column":17,"nodeType":"146","messageId":"147","endLine":25,"endColumn":21},{"ruleId":"183","severity":1,"message":"184","line":77,"column":8,"nodeType":"185","endLine":77,"endColumn":10,"suggestions":"186"},"no-native-reassign",["187"],"no-negated-in-lhs",["188"],"no-unused-vars","'setOpen' is assigned a value but never used.","Identifier","unusedVar","no-mixed-operators","Unexpected mix of '&&' and '||'. Use parentheses to clarify the intended order of operations.","LogicalExpression","unexpectedMixedOperator","Unexpected mix of '||' and '&&'. Use parentheses to clarify the intended order of operations.",["187"],["188"],"'Grid' is defined but never used.","'Link' is defined but never used.","'alertOpen' is assigned a value but never used.","'setAlertOpen' is assigned a value but never used.","'handleOnConfirmExit' is assigned a value but never used.",["187"],["188"],"'Paper' is defined but never used.","'styled' is defined but never used.","'TextGeekify' is defined but never used.","'textType' is defined but never used.","'history' is assigned a value but never used.","'data' is assigned a value but never used.","'_LOGIN_PATH' is assigned a value but never used.","'_RESET_STEP1' is assigned a value but never used.","'_RESET_STEP2' is assigned a value but never used.","'Button' is defined but never used.","'texts' is assigned a value but never used.","'setRedirectTo' is assigned a value but never used.","'drawerLink' is assigned a value but never used.","'setDrawerLink' is assigned a value but never used.","react/style-prop-object","Style prop value must be an object","JSXAttribute","stylePropNotObject","'GridGames' is defined but never used.","'Item' is assigned a value but never used.","'games' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'texts.body', 'texts.body_bold', 'texts.body_breadcrumbs', 'texts.body_card', 'texts.body_drawer', 'texts.body_medium', 'texts.body_subtext', 'texts.number', 'texts.subtitle', 'texts.subtitle_bold', 'texts.subtitle_medium', 'texts.title', 'texts.title_bold', 'texts.title_main', 'texts.title_medium', and 'type'. Either include them or remove the dependency array.","ArrayExpression",["189"],"no-global-assign","no-unsafe-negation",{"desc":"190","fix":"191"},"Update the dependencies array to be: [texts.body, texts.body_bold, texts.body_breadcrumbs, texts.body_card, texts.body_drawer, texts.body_medium, texts.body_subtext, texts.number, texts.subtitle, texts.subtitle_bold, texts.subtitle_medium, texts.title, texts.title_bold, texts.title_main, texts.title_medium, type]",{"range":"192","text":"193"},[2568,2570],"[texts.body, texts.body_bold, texts.body_breadcrumbs, texts.body_card, texts.body_drawer, texts.body_medium, texts.body_subtext, texts.number, texts.subtitle, texts.subtitle_bold, texts.subtitle_medium, texts.title, texts.title_bold, texts.title_main, texts.title_medium, type]"]