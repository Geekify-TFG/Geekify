[{"/Users/jordiromero/Documents/Universidad/TFG/Geekify/src/index.js":"1","/Users/jordiromero/Documents/Universidad/TFG/Geekify/src/App.js":"2","/Users/jordiromero/Documents/Universidad/TFG/Geekify/src/reportWebVitals.js":"3","/Users/jordiromero/Documents/Universidad/TFG/Geekify/src/resources/AppTexts.js":"4","/Users/jordiromero/Documents/Universidad/TFG/Geekify/src/components/Navbar/Navbar.js":"5","/Users/jordiromero/Documents/Universidad/TFG/Geekify/src/resources/AppColors.js":"6","/Users/jordiromero/Documents/Universidad/TFG/Geekify/src/locale/en.js":"7","/Users/jordiromero/Documents/Universidad/TFG/Geekify/src/pages/MainPage.js":"8","/Users/jordiromero/Documents/Universidad/TFG/Geekify/src/resources/ApiUrls.js":"9","/Users/jordiromero/Documents/Universidad/TFG/Geekify/src/components/GridGames/GridGames.js":"10","/Users/jordiromero/Documents/Universidad/TFG/Geekify/src/components/GameCard/index.js":"11","/Users/jordiromero/Documents/Universidad/TFG/Geekify/src/components/GameCard/GameCard.js":"12","/Users/jordiromero/Documents/Universidad/TFG/Geekify/src/resources/Icons.js":"13","/Users/jordiromero/Documents/Universidad/TFG/Geekify/src/components/IconProvider/IconProvider.js":"14","/Users/jordiromero/Documents/Universidad/TFG/Geekify/src/pages/GamePage.js":"15","/Users/jordiromero/Documents/Universidad/TFG/Geekify/src/components/CardGeekify/CardGeekify.js":"16","/Users/jordiromero/Documents/Universidad/TFG/Geekify/src/components/TextGeekify/TextGeekify.js":"17","/Users/jordiromero/Documents/Universidad/TFG/Geekify/src/components/SearchBar/SearchBar.js":"18","/Users/jordiromero/Documents/Universidad/TFG/Geekify/src/components/ButtonFilled/ButtonFilled.js":"19"},{"size":500,"mtime":1645265084165,"results":"20","hashOfConfig":"21"},{"size":6394,"mtime":1645899223716,"results":"22","hashOfConfig":"21"},{"size":362,"mtime":1645265084165,"results":"23","hashOfConfig":"21"},{"size":3214,"mtime":1645871453991,"results":"24","hashOfConfig":"21"},{"size":5712,"mtime":1645730417805,"results":"25","hashOfConfig":"21"},{"size":219,"mtime":1645868356053,"results":"26","hashOfConfig":"21"},{"size":186,"mtime":1645867785769,"results":"27","hashOfConfig":"21"},{"size":2610,"mtime":1645902842375,"results":"28","hashOfConfig":"21"},{"size":462,"mtime":1645730031994,"results":"29","hashOfConfig":"21"},{"size":4002,"mtime":1645902856692,"results":"30","hashOfConfig":"21"},{"size":36,"mtime":1645720682350,"results":"31","hashOfConfig":"21"},{"size":7694,"mtime":1645901570534,"results":"32","hashOfConfig":"21"},{"size":849,"mtime":1645869049407,"results":"33","hashOfConfig":"21"},{"size":721,"mtime":1645730064700,"results":"34","hashOfConfig":"21"},{"size":1837,"mtime":1645866839177,"results":"35","hashOfConfig":"21"},{"size":1212,"mtime":1645730199535,"results":"36","hashOfConfig":"21"},{"size":2960,"mtime":1645871420790,"results":"37","hashOfConfig":"21"},{"size":2862,"mtime":1645897161469,"results":"38","hashOfConfig":"21"},{"size":3197,"mtime":1645902438496,"results":"39","hashOfConfig":"21"},{"filePath":"40","messages":"41","suppressedMessages":"42","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"43"},"iszs3t",{"filePath":"44","messages":"45","suppressedMessages":"46","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"47","messages":"48","suppressedMessages":"49","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"43"},{"filePath":"50","messages":"51","suppressedMessages":"52","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"53"},{"filePath":"54","messages":"55","suppressedMessages":"56","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"57","usedDeprecatedRules":"58"},{"filePath":"59","messages":"60","suppressedMessages":"61","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"43"},{"filePath":"62","messages":"63","suppressedMessages":"64","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"43"},{"filePath":"65","messages":"66","suppressedMessages":"67","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"68","messages":"69","suppressedMessages":"70","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"71","usedDeprecatedRules":"43"},{"filePath":"72","messages":"73","suppressedMessages":"74","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"75","messages":"76","suppressedMessages":"77","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"43"},{"filePath":"78","messages":"79","suppressedMessages":"80","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"81","messages":"82","suppressedMessages":"83","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"85","messages":"86","suppressedMessages":"87","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"88","messages":"89","suppressedMessages":"90","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"91","usedDeprecatedRules":"43"},{"filePath":"92","messages":"93","suppressedMessages":"94","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"43"},{"filePath":"95","messages":"96","suppressedMessages":"97","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"98","messages":"99","suppressedMessages":"100","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"101","messages":"102","suppressedMessages":"103","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/Users/jordiromero/Documents/Universidad/TFG/Geekify/src/index.js",[],[],["104","105"],"/Users/jordiromero/Documents/Universidad/TFG/Geekify/src/App.js",["106","107","108","109","110"],[],"/Users/jordiromero/Documents/Universidad/TFG/Geekify/src/reportWebVitals.js",[],[],"/Users/jordiromero/Documents/Universidad/TFG/Geekify/src/resources/AppTexts.js",[],[],["111","112"],"/Users/jordiromero/Documents/Universidad/TFG/Geekify/src/components/Navbar/Navbar.js",["113","114","115","116","117"],[],"import React, { useState} from 'react';\nimport clsx from 'clsx'\nimport {AppBar, Grid, IconButton, Toolbar} from '@material-ui/core'\n\nimport {makeStyles} from '@material-ui/core/styles'\nimport {AppColors} from \"../../resources/AppColors\"\nimport {Link, useHistory} from 'react-router-dom'\nimport PropTypes from 'prop-types';\nimport ExitToAppIcon from '@material-ui/icons/ExitToApp';\nimport AccountCircleOutlinedIcon from '@material-ui/icons/AccountCircleOutlined';\n\n\n\nconst drawerWidth = 240;\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        display: 'flex',\n    },\n    appBar: {\n        transition: theme.transitions.create(['margin', 'width'], {\n            easing: theme.transitions.easing.sharp,\n            duration: theme.transitions.duration.leavingScreen,\n        }),\n    },\n    appBarShift: {\n        width: `calc(100% - ${drawerWidth}px)`,\n        marginLeft: drawerWidth,\n        transition: theme.transitions.create(['margin', 'width'], {\n            easing: theme.transitions.easing.easeOut,\n            duration: theme.transitions.duration.enteringScreen,\n        }),\n    },\n    menuButton: {\n        marginRight: theme.spacing(2),\n    },\n    hide: {\n        display: 'none',\n    },\n    drawer: {\n        width: drawerWidth,\n        flexShrink: 0,\n    },\n    drawerPaper: {\n        width: drawerWidth,\n    },\n    drawerHeader: {\n        display: 'flex',\n        alignItems: 'center',\n        padding: theme.spacing(0, 1),\n        // necessary for content to be below app bar\n        ...theme.mixins.toolbar,\n        justifyContent: 'flex-end',\n    },\n    content: {\n        flexGrow: 1,\n        padding: theme.spacing(3),\n        transition: theme.transitions.create('margin', {\n            easing: theme.transitions.easing.sharp,\n            duration: theme.transitions.duration.leavingScreen,\n        }),\n        marginLeft: -drawerWidth,\n    },\n    contentShift: {\n        transition: theme.transitions.create('margin', {\n            easing: theme.transitions.easing.easeOut,\n            duration: theme.transitions.duration.enteringScreen,\n        }),\n        marginLeft: 0,\n    },\n    title: {\n        flexGrow: 1,\n        textAlign: 'center'\n    },\n    imageIcon: {\n        height: '100%',\n    },\n    icon: {\n        height: '60px',\n    },\n    iconRoot: {\n        textAlign: 'center'\n    },\n}));\n\n/**\n * @component\n * Component to create the superior navbar\n * @param {boolean} open : value to know when the navbar is open\n * @param {boolean} setOpen: value to open or close the navbar\n * @param {function} setSelected: function to know which value of the drawer is selected\n * @param {boolean} logged: value to know if the user is logged or not\n *\n * @constructor\n * <Navbar open={false} setOpen={false} setSelected={null} logged={false}/>\n */\nconst Navbar = ({open, setOpen, setSelected, logged}) => {\n    //const authContext = useContext(AuthContext)\n    //const {logout,signOut} = authContext;\n    const classes = useStyles();\n    const history = useHistory()\n    const [alertOpen, setAlertOpen] = React.useState(false);\n    const [showExitModal, setShowExitModal] = useState(false);\n\n    const handleDrawerOpen = () => {\n        setOpen(true);\n    };\n    const handleSetSelected = () => {\n        setSelected(null)\n    }\n\n\n    const handleClickOpen = () => {\n        setShowExitModal(true);\n    };\n\n    const handleOnConfirmExit = ()=> {\n        // TODO: Duplicate form\n        sessionStorage.removeItem('user')\n       // logout()\n        setShowExitModal(!showExitModal)\n    }\n\n\n    return (\n        <AppBar\n            style={{color: AppColors.WHITE, background: AppColors.PRIMARY}}\n            position=\"fixed\"\n            className={clsx(classes.appBar, {\n                [classes.appBarShift]: open,\n            })}\n        >\n            <Toolbar>\n                {logged &&\n                < IconButton\n                    color=\"inherit\"\n                    aria-label=\"open drawer\"\n                    edge=\"end\"\n                    onClick={handleDrawerOpen}\n                    className={clsx(open && classes.hide)}\n                >\n\n                </IconButton>\n                }\n\n                {logged &&\n                <IconButton onClick={() => {\n                    history.push('/account');\n                    handleSetSelected()\n                }} color='inherit'>\n                    <AccountCircleOutlinedIcon/>\n                </IconButton>\n                }\n                {logged &&\n                <IconButton onClick={() => handleClickOpen()} color='inherit'>\n                    <ExitToAppIcon/>\n                </IconButton>\n                }\n                {/*\n                    {showExitModal && (\n\n                        <DialogUhda textCancelButton={LabelsLogOut.CANCEL}\n                                    body={\n                                        <Grid>\n                                            <TextUhda color={AppColors.PRIMARY} type={textType.BODY}\n                                                      text={LabelsLogOut.TEXT}/>\n\n\n                                        </Grid>}\n                                    buttonColor={AppColors.RED}\n                                    title={LabelsLogOut.LOG_OUT}\n                                    show={showExitModal}\n                                    handleShow={setShowExitModal}\n                                    handleConfirm={handleOnConfirmExit}\n                                    textConfirmButton={LabelsLogOut.SURE}/>\n                    )}\n                */}\n\n            </Toolbar>\n        </AppBar>\n    )\n}\n\nNavbar.propTypes = {\n    open: PropTypes.bool,\n    setOpen: PropTypes.bool,\n    setSelected: PropTypes.func.isRequired\n}\n\nexport default Navbar;\n",["118","119"],"/Users/jordiromero/Documents/Universidad/TFG/Geekify/src/resources/AppColors.js",[],[],"/Users/jordiromero/Documents/Universidad/TFG/Geekify/src/locale/en.js",[],[],"/Users/jordiromero/Documents/Universidad/TFG/Geekify/src/pages/MainPage.js",["120","121","122","123","124","125"],[],"/Users/jordiromero/Documents/Universidad/TFG/Geekify/src/resources/ApiUrls.js",["126","127","128"],[],"// Base\nconst _DOMAIN = \"https://api.rawg.io/api\"; // Domain of the server\n\nconst _API_KEY = \"?key=40f3cb2ff2c94a5889d3d6c865415ec5\\n\"; // Path to the API\nexport const BASE_PATH = `${_DOMAIN}`; // Base URL of the backend\n\n// Paths auths\nconst _LOGIN_PATH = \"/auth/login\";\nconst _RESET_STEP1 = \"/auth/reset-step1\";\nconst _RESET_STEP2 = \"/auth/reset-step2\";\n\n// Path games\nconst _GAMES_PATH = \"/games\";\n// Endpoints\nexport const GAMES = `${_GAMES_PATH}${_API_KEY}`","/Users/jordiromero/Documents/Universidad/TFG/Geekify/src/components/GridGames/GridGames.js",["129","130","131","132","133"],[],"/Users/jordiromero/Documents/Universidad/TFG/Geekify/src/components/GameCard/index.js",[],[],"/Users/jordiromero/Documents/Universidad/TFG/Geekify/src/components/GameCard/GameCard.js",["134","135","136","137","138"],[],"/Users/jordiromero/Documents/Universidad/TFG/Geekify/src/resources/Icons.js",[],[],["139","140"],"/Users/jordiromero/Documents/Universidad/TFG/Geekify/src/components/IconProvider/IconProvider.js",[],[],"/Users/jordiromero/Documents/Universidad/TFG/Geekify/src/pages/GamePage.js",["141","142","143","144"],[],"import React, {useEffect, useState} from 'react';\nimport {Grid, Paper} from \"@material-ui/core\";\nimport {Button, Container, styled, Typography} from \"@mui/material\";\nimport logo from \"../logo.svg\";\nimport {BASE_PATH, GAMES} from \"../resources/ApiUrls\";\nimport axios from \"axios\";\nimport GridGames from \"../components/GridGames/GridGames\";\nimport {useHistory} from \"react-router-dom\";\n\nconst Item = styled(Paper)(({theme}) => ({\n    backgroundColor: theme.palette.mode === 'dark' ? '#1A2027' : '#fff',\n    ...theme.typography.body2,\n    padding: theme.spacing(1),\n    textAlign: 'center',\n    color: theme.palette.text.secondary,\n}));\n\n\nconst GamePage = () => {\n    const [games, setGames] = useState();\n    const history = useHistory()\n\n    const getGames = async () => {\n        try {\n            var data = []\n            const response = await axios.get(`${BASE_PATH}${GAMES}`);\n            console.log(response.data.results)\n            setGames(response.data.results)\n        } catch (err) {\n            console.log(err.message)\n        }\n    }\n    useEffect(() => {\n        getGames()\n    }, []);\n\n    return (\n        <Grid container>\n            <Button onClick={()=>history.push({pathname:\"/\"})}>A</Button>\n\n            <Container maxWidth=\"sm\" className=\"App\">\n            <Paper>\n                <img src={logo} className=\"App-logo\" alt=\"logo\" />\n                <Typography variant=\"h4\" component=\"h1\" gutterBottom>\n                    Geekify project v5\n                </Typography>\n                <Button variant=\"contained\" color=\"primary\">\n                    Primary Button\n                </Button>\n                <Button variant=\"contained\" color=\"secondary\">\n                    Secondary Button\n                </Button>\n            </Paper>\n        </Container>\n        </Grid>\n    )\n}\n\nexport default GamePage;\n","/Users/jordiromero/Documents/Universidad/TFG/Geekify/src/components/CardGeekify/CardGeekify.js",[],[],"/Users/jordiromero/Documents/Universidad/TFG/Geekify/src/components/TextGeekify/TextGeekify.js",["145"],[],"/Users/jordiromero/Documents/Universidad/TFG/Geekify/src/components/SearchBar/SearchBar.js",["146"],[],"/Users/jordiromero/Documents/Universidad/TFG/Geekify/src/components/ButtonFilled/ButtonFilled.js",["147"],[],{"ruleId":"148","replacedBy":"149"},{"ruleId":"150","replacedBy":"151"},{"ruleId":"152","severity":1,"message":"153","line":89,"column":18,"nodeType":"154","messageId":"155","endLine":89,"endColumn":25},{"ruleId":"156","severity":1,"message":"157","line":152,"column":69,"nodeType":"158","messageId":"159","endLine":152,"endColumn":71},{"ruleId":"156","severity":1,"message":"157","line":152,"column":79,"nodeType":"158","messageId":"159","endLine":152,"endColumn":81},{"ruleId":"156","severity":1,"message":"160","line":152,"column":79,"nodeType":"158","messageId":"159","endLine":152,"endColumn":81},{"ruleId":"156","severity":1,"message":"160","line":152,"column":101,"nodeType":"158","messageId":"159","endLine":152,"endColumn":103},{"ruleId":"148","replacedBy":"161"},{"ruleId":"150","replacedBy":"162"},{"ruleId":"152","severity":1,"message":"163","line":3,"column":17,"nodeType":"154","messageId":"155","endLine":3,"endColumn":21},{"ruleId":"152","severity":1,"message":"164","line":7,"column":9,"nodeType":"154","messageId":"155","endLine":7,"endColumn":13},{"ruleId":"152","severity":1,"message":"165","line":101,"column":12,"nodeType":"154","messageId":"155","endLine":101,"endColumn":21},{"ruleId":"152","severity":1,"message":"166","line":101,"column":23,"nodeType":"154","messageId":"155","endLine":101,"endColumn":35},{"ruleId":"152","severity":1,"message":"167","line":116,"column":11,"nodeType":"154","messageId":"155","endLine":116,"endColumn":30},{"ruleId":"148","replacedBy":"168"},{"ruleId":"150","replacedBy":"169"},{"ruleId":"152","severity":1,"message":"170","line":10,"column":8,"nodeType":"154","messageId":"155","endLine":10,"endColumn":20},{"ruleId":"152","severity":1,"message":"171","line":11,"column":9,"nodeType":"154","messageId":"155","endLine":11,"endColumn":18},{"ruleId":"152","severity":1,"message":"172","line":12,"column":8,"nodeType":"154","messageId":"155","endLine":12,"endColumn":20},{"ruleId":"152","severity":1,"message":"173","line":31,"column":11,"nodeType":"154","messageId":"155","endLine":31,"endColumn":18},{"ruleId":"152","severity":1,"message":"174","line":32,"column":11,"nodeType":"154","messageId":"155","endLine":32,"endColumn":18},{"ruleId":"152","severity":1,"message":"175","line":37,"column":17,"nodeType":"154","messageId":"155","endLine":37,"endColumn":21},{"ruleId":"152","severity":1,"message":"176","line":8,"column":7,"nodeType":"154","messageId":"155","endLine":8,"endColumn":18},{"ruleId":"152","severity":1,"message":"177","line":9,"column":7,"nodeType":"154","messageId":"155","endLine":9,"endColumn":19},{"ruleId":"152","severity":1,"message":"178","line":10,"column":7,"nodeType":"154","messageId":"155","endLine":10,"endColumn":19},{"ruleId":"152","severity":1,"message":"179","line":2,"column":9,"nodeType":"154","messageId":"155","endLine":2,"endColumn":15},{"ruleId":"152","severity":1,"message":"173","line":29,"column":11,"nodeType":"154","messageId":"155","endLine":29,"endColumn":18},{"ruleId":"152","severity":1,"message":"180","line":30,"column":11,"nodeType":"154","messageId":"155","endLine":30,"endColumn":16},{"ruleId":"152","severity":1,"message":"181","line":32,"column":24,"nodeType":"154","messageId":"155","endLine":32,"endColumn":37},{"ruleId":"152","severity":1,"message":"175","line":40,"column":17,"nodeType":"154","messageId":"155","endLine":40,"endColumn":21},{"ruleId":"152","severity":1,"message":"182","line":80,"column":12,"nodeType":"154","messageId":"155","endLine":80,"endColumn":22},{"ruleId":"152","severity":1,"message":"183","line":80,"column":24,"nodeType":"154","messageId":"155","endLine":80,"endColumn":37},{"ruleId":"152","severity":1,"message":"184","line":100,"column":11,"nodeType":"154","messageId":"155","endLine":100,"endColumn":15},{"ruleId":"185","severity":1,"message":"186","line":127,"column":65,"nodeType":"187","messageId":"188","endLine":127,"endColumn":85},{"ruleId":"185","severity":1,"message":"186","line":147,"column":57,"nodeType":"187","messageId":"188","endLine":147,"endColumn":77},{"ruleId":"148","replacedBy":"189"},{"ruleId":"150","replacedBy":"190"},{"ruleId":"152","severity":1,"message":"191","line":7,"column":8,"nodeType":"154","messageId":"155","endLine":7,"endColumn":17},{"ruleId":"152","severity":1,"message":"192","line":10,"column":7,"nodeType":"154","messageId":"155","endLine":10,"endColumn":11},{"ruleId":"152","severity":1,"message":"193","line":20,"column":12,"nodeType":"154","messageId":"155","endLine":20,"endColumn":17},{"ruleId":"152","severity":1,"message":"175","line":25,"column":17,"nodeType":"154","messageId":"155","endLine":25,"endColumn":21},{"ruleId":"194","severity":1,"message":"195","line":77,"column":8,"nodeType":"196","endLine":77,"endColumn":10,"suggestions":"197"},{"ruleId":"152","severity":1,"message":"198","line":2,"column":8,"nodeType":"154","messageId":"155","endLine":2,"endColumn":18},{"ruleId":"152","severity":1,"message":"174","line":55,"column":11,"nodeType":"154","messageId":"155","endLine":55,"endColumn":18},"no-native-reassign",["199"],"no-negated-in-lhs",["200"],"no-unused-vars","'setOpen' is assigned a value but never used.","Identifier","unusedVar","no-mixed-operators","Unexpected mix of '&&' and '||'. Use parentheses to clarify the intended order of operations.","LogicalExpression","unexpectedMixedOperator","Unexpected mix of '||' and '&&'. Use parentheses to clarify the intended order of operations.",["199"],["200"],"'Grid' is defined but never used.","'Link' is defined but never used.","'alertOpen' is assigned a value but never used.","'setAlertOpen' is assigned a value but never used.","'handleOnConfirmExit' is assigned a value but never used.",["199"],["200"],"'ButtonFilled' is defined but never used.","'AppColors' is defined but never used.","'IconProvider' is defined but never used.","'history' is assigned a value but never used.","'classes' is assigned a value but never used.","'data' is assigned a value but never used.","'_LOGIN_PATH' is assigned a value but never used.","'_RESET_STEP1' is assigned a value but never used.","'_RESET_STEP2' is assigned a value but never used.","'Button' is defined but never used.","'texts' is assigned a value but never used.","'setRedirectTo' is assigned a value but never used.","'drawerLink' is assigned a value but never used.","'setDrawerLink' is assigned a value but never used.","'body' is assigned a value but never used.","react/style-prop-object","Style prop value must be an object","JSXAttribute","stylePropNotObject",["199"],["200"],"'GridGames' is defined but never used.","'Item' is assigned a value but never used.","'games' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'texts.body', 'texts.body_bold', 'texts.body_breadcrumbs', 'texts.body_card', 'texts.body_drawer', 'texts.body_medium', 'texts.body_subtext', 'texts.number', 'texts.subtitle', 'texts.subtitle_bold', 'texts.subtitle_medium', 'texts.title', 'texts.title_bold', 'texts.title_main', 'texts.title_medium', and 'type'. Either include them or remove the dependency array.","ArrayExpression",["201"],"'SearchIcon' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"202","fix":"203"},"Update the dependencies array to be: [texts.body, texts.body_bold, texts.body_breadcrumbs, texts.body_card, texts.body_drawer, texts.body_medium, texts.body_subtext, texts.number, texts.subtitle, texts.subtitle_bold, texts.subtitle_medium, texts.title, texts.title_bold, texts.title_main, texts.title_medium, type]",{"range":"204","text":"205"},[2568,2570],"[texts.body, texts.body_bold, texts.body_breadcrumbs, texts.body_card, texts.body_drawer, texts.body_medium, texts.body_subtext, texts.number, texts.subtitle, texts.subtitle_bold, texts.subtitle_medium, texts.title, texts.title_bold, texts.title_main, texts.title_medium, type]"]