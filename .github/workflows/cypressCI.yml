# This is a basic workflow to help you get started with Actions

name: Control Tests

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events
  push:
    branches:
      - develop
      - main
      - QA-Cypress

  pull_request:
    branches:
      - develop
      - main
      - QA-Cypress

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  Primary-tests:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r api/requirements.txt
          pip install pytest
      # Install NPM dependencies, cache them correctly
      # and run all Cypress tests
      - name: Acceptance tests (Cypress in Chrome browser)
        uses: cypress-io/github-action@v2.9.7
        with:
          # build: npm run build
          start: npm start
          wait-on: 'http://localhost:3000'
          browser: chrome
          headless: false
          record: true
        env:
          # pass the Dashboard record key as an environment variable
          CYPRESS_RECORD_KEY: ${{ secrets.CYPRESS_RECORD_KEY }}
          # pass GitHub token to allow accurately detecting a build vs a re-run build
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - uses: actions/upload-artifact@v1
        if: failure()
        with:
          name: cypress-screenshots
          path: cypress/screenshots
      # Test run video was always captured, so this action uses "always()" condition
      - uses: actions/upload-artifact@v1
        if: always()
        with:
          name: cypress-videos
          path: cypress/videos
      - name: Unit tests
        run: python -m pytest testModels
        working-directory: api
      - name: Integration tests
        run: python -m pytest testREST
        working-directory: api